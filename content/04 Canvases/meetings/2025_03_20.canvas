{
  "edges": [
    {
      "fromNode": "d3d8a095b99a9142",
      "fromSide": "bottom",
      "id": "af9a9151cd26b795",
      "toNode": "0a513a76f2085570",
      "toSide": "top"
    },
    {
      "fromNode": "d3d8a095b99a9142",
      "fromSide": "bottom",
      "id": "0ef32655a584cd37",
      "toNode": "46bf7d44180ce4d2",
      "toSide": "top"
    },
    {
      "fromNode": "c6417e9d23b4eccf",
      "fromSide": "bottom",
      "id": "4043ea73a8b322dc",
      "toNode": "c2da02b1a1d2ce74",
      "toSide": "top"
    },
    {
      "fromNode": "c6417e9d23b4eccf",
      "fromSide": "bottom",
      "id": "1b6f02cfcc69a42f",
      "toNode": "4fffe7fd014b7dee",
      "toSide": "top"
    },
    {
      "fromNode": "2c5b9ffd5f9f0139",
      "fromSide": "right",
      "id": "dac995cce38c2f3d",
      "toNode": "c6d1280618d7dbdf",
      "toSide": "left"
    },
    {
      "fromNode": "2c5b9ffd5f9f0139",
      "fromSide": "right",
      "id": "0b1d23b00a83310b",
      "toNode": "3db73b0ba1828603",
      "toSide": "left"
    },
    {
      "fromNode": "3db73b0ba1828603",
      "fromSide": "right",
      "id": "c33f38f84ab09db6",
      "toNode": "3fdc0d516adb6f63",
      "toSide": "left"
    },
    {
      "fromNode": "c6d1280618d7dbdf",
      "fromSide": "right",
      "id": "246f3f7f7b5c1beb",
      "toNode": "65e933fc7bec68b4",
      "toSide": "left"
    },
    {
      "fromNode": "c2da02b1a1d2ce74",
      "fromSide": "bottom",
      "id": "a93c286d4116fa45",
      "toNode": "64b21cf9dec536c5",
      "toSide": "top"
    },
    {
      "fromNode": "4fffe7fd014b7dee",
      "fromSide": "bottom",
      "id": "494fc5f82ef023f5",
      "toNode": "569f9f5935d87ec1",
      "toSide": "top"
    },
    {
      "fromNode": "d1e23525fa2a8dcf",
      "fromSide": "right",
      "id": "52bcee6eedba6646",
      "toNode": "6ab1bb100f742959",
      "toSide": "left"
    },
    {
      "fromNode": "ba5802e2b8e96fc0",
      "fromSide": "right",
      "id": "a391f444a24e5af0",
      "toNode": "8478cae1b35089de",
      "toSide": "left"
    },
    {
      "fromNode": "3db73b0ba1828603",
      "fromSide": "right",
      "id": "12509b5f6b597464",
      "toNode": "f6d29741ef16d3fd",
      "toSide": "left"
    },
    {
      "fromNode": "3349bb1d2318ee15",
      "fromSide": "right",
      "id": "0efd9c5024146e5a",
      "toNode": "83e1ead12f3740ea",
      "toSide": "left"
    },
    {
      "fromNode": "64b21cf9dec536c5",
      "fromSide": "bottom",
      "id": "13364db287435d1b",
      "toNode": "7f02614d578c8912",
      "toSide": "top"
    },
    {
      "fromNode": "569f9f5935d87ec1",
      "fromSide": "bottom",
      "id": "2d8bcf8e08fb5c1c",
      "toNode": "092cddc14827cc9f",
      "toSide": "top"
    }
  ],
  "nodes": [
    {
      "height": 194,
      "id": "d1e23525fa2a8dcf",
      "styleAttributes": {
      },
      "text": "\\[Book] **Front-end development handbook** (2019) https://frontendmasters.com/guides/front-end-handbook/2019/",
      "type": "text",
      "width": 420,
      "x": -4500,
      "y": 140
    },
    {
      "height": 280,
      "id": "3349bb1d2318ee15",
      "styleAttributes": {
      },
      "text": "**Barriers in Front-End Web Development** [[(Samudio, LaToza, 2022)]]\n- posts examined on Stack Overflow using to assess common issues in ==what the authors think is the front-end development context==",
      "type": "text",
      "width": 420,
      "x": -4500,
      "y": 380
    },
    {
      "height": 180,
      "id": "d3d8a095b99a9142",
      "styleAttributes": {
      },
      "text": "### ==No clear definition of front-end security==\n#### Are these issues due to low front-end security or to server-side failure?",
      "type": "text",
      "width": 631,
      "x": -4380,
      "y": -860
    },
    {
      "height": 167,
      "id": "43f5d3894768b88d",
      "styleAttributes": {
      },
      "text": "# RQ1. What web front-end vulnerabilities are more relevant?",
      "type": "text",
      "width": 631,
      "x": -4380,
      "y": -1080
    },
    {
      "height": 150,
      "id": "ba5802e2b8e96fc0",
      "styleAttributes": {
      },
      "text": "**Comparison and Analysis of Popular Frontend Frameworks and Libraries [[(Kaur, Tiwari, 2023)]]**",
      "type": "text",
      "width": 420,
      "x": -4500,
      "y": 730
    },
    {
      "height": 80,
      "id": "4fffe7fd014b7dee",
      "styleAttributes": {
      },
      "text": "# Hybrid front-end attack",
      "type": "text",
      "width": 487,
      "x": -3841,
      "y": 1930
    },
    {
      "height": 220,
      "id": "0a513a76f2085570",
      "styleAttributes": {
      },
      "text": "Metadata manipulation\n- cookies theft\n- [[session hijacking]]",
      "type": "text",
      "width": 337,
      "x": -4420,
      "y": -580
    },
    {
      "height": 218,
      "id": "46bf7d44180ce4d2",
      "styleAttributes": {
      },
      "text": "URL manipulation\n- [[forced browsing]]\n- [[IDOR (Insecure Direct Object Reference)]]\n",
      "type": "text",
      "width": 355,
      "x": -4064,
      "y": -578
    },
    {
      "height": 80,
      "id": "c2da02b1a1d2ce74",
      "styleAttributes": {
      },
      "text": "# Pure front-end attack",
      "type": "text",
      "width": 436,
      "x": -4644,
      "y": 1930
    },
    {
      "color": "5",
      "height": 260,
      "id": "c6417e9d23b4eccf",
      "styleAttributes": {
      },
      "text": "\n## If the attack does not need the server to be carried out, *then* it must be a pure front-end attack. \n\n## In all other cases, front-end is just a *phase* of a web server attack\n",
      "type": "text",
      "width": 719,
      "x": -4380,
      "y": 1520
    },
    {
      "height": 116,
      "id": "3db73b0ba1828603",
      "styleAttributes": {
      },
      "text": "## Theoretical reasons",
      "type": "text",
      "width": 320,
      "x": -4306,
      "y": 4291
    },
    {
      "height": 560,
      "id": "7f02614d578c8912",
      "styleAttributes": {
      },
      "text": "## Examples\n\n- [[GEMs (GUI Element Misuse)]] and [[BFT (business flow tampering)]]\n- [[prototype pollution]] (front-end)\n- [[DOM clobbering]]\n- DOM-based [[XSS (cross site scripting)]]\n- [[ReDoS (Regular Expression Denial of Service)]]\n- [[clickjacking]]\n- [[tabnabbing]]\n- [[Web Storage API (localStorage, sessionStorage)]] security\n- [[cross-domain policies]] misconfiguration (front-end)\n- [[SW (Service Worker)]] exploitation\n- [[C2C (client-to-client) communication]] with `PostMessage` API\n",
      "type": "text",
      "width": 640,
      "x": -4746,
      "y": 2560
    },
    {
      "height": 390,
      "id": "569f9f5935d87ec1",
      "styleAttributes": {
      },
      "text": "## RQ 2 \n## What exactly are the responsibilities of the front end software in an attack that eventually ==target the server==?\n\n## How does the front-end ==contribute to the defense== of an attack to a web server?",
      "type": "text",
      "width": 632,
      "x": -3913,
      "y": 2090
    },
    {
      "height": 390,
      "id": "64b21cf9dec536c5",
      "styleAttributes": {
      },
      "text": "## RQ 1\n\n## In which scenarios it is possible to carry out an attack on the web front-end ==without the server being involved==?\n\n## What is the role of web front-end software in an attack that does ==not involve a web server==?",
      "type": "text",
      "width": 640,
      "x": -4746,
      "y": 2090
    },
    {
      "height": 560,
      "id": "092cddc14827cc9f",
      "styleAttributes": {
      },
      "text": "## Examples\n\n- [[XSS (cross site scripting)]]\n- [[SQLIA (SQL injection attack)]]\n- [[EAR (Execution After Redirect)]]\n- [[directory traversal (path traversal)]]\n- [[CSRF (cross-site request forgery)]]\n- [[cross-domain policies]] misconfiguration (full-stack)\n- [[IDOR (Insecure Direct Object Reference)]]",
      "type": "text",
      "width": 632,
      "x": -3913,
      "y": 2560
    },
    {
      "height": 152,
      "id": "6ab1bb100f742959",
      "styleAttributes": {
      },
      "text": "Front-end web development, as the ==practice of producing HTML, CSS and JavaScript== ",
      "type": "text",
      "width": 320,
      "x": -4000,
      "y": 161
    },
    {
      "height": 164,
      "id": "83e1ead12f3740ea",
      "styleAttributes": {
      },
      "text": "front-end has the responsibility of sending the right data to the a web server",
      "type": "text",
      "width": 320,
      "x": -4000,
      "y": 438
    },
    {
      "height": 272,
      "id": "8478cae1b35089de",
      "styleAttributes": {
      },
      "text": "The **frontend** is concerned with ==displaying data==, whereas the backend is in charge of ==storing data, processing requests, and managing communication== ",
      "type": "text",
      "width": 320,
      "x": -4000,
      "y": 669
    },
    {
      "height": 217,
      "id": "3fdc0d516adb6f63",
      "styleAttributes": {
      },
      "text": "### ==Help defining domains and responsibilities==: often client and server software are developed by different teams. Clarifying the role of each side in a security context could drive better mitigation solutions\n",
      "type": "text",
      "width": 765,
      "x": -3898,
      "y": 4082
    },
    {
      "height": 213,
      "id": "f6d29741ef16d3fd",
      "styleAttributes": {
      },
      "text": "### ==Identifying root causes of a security issue==: by understanding whether some phases of a web attack may not be essential and by identify exactly where the vulnerability is and whose \"fault\" is",
      "type": "text",
      "width": 765,
      "x": -3898,
      "y": 4357
    },
    {
      "height": 256,
      "id": "65e933fc7bec68b4",
      "styleAttributes": {
      },
      "text": "### ==No need to discard papers that seems not to be focused on the front-end== :every form of attack could potentially be classified as either a *pure front-end attack* and an *hybrid front-end attack*",
      "type": "text",
      "width": 765,
      "x": -3898,
      "y": 3720
    },
    {
      "height": 97,
      "id": "c6d1280618d7dbdf",
      "styleAttributes": {
      },
      "text": "## Practical reasons",
      "type": "text",
      "width": 320,
      "x": -4306,
      "y": 3800
    },
    {
      "height": 100,
      "id": "2c5b9ffd5f9f0139",
      "styleAttributes": {
      },
      "text": "# Why is this relevant?",
      "type": "text",
      "width": 408,
      "x": -4840,
      "y": 4032
    },
    {
      "height": 350,
      "id": "80bc19ae379c92db",
      "styleAttributes": {
      },
      "text": "### History of Adobe Flash\n\n[[Adobe Flash]] (1990-2021)\n- used by most web application in 2010-2015\n- many vulnerabilities: [[RCE (Remote Code Execution)]] , [[drive-by download]]",
      "type": "text",
      "width": 380,
      "x": -1680,
      "y": -955
    },
    {
      "height": 350,
      "id": "24ee6ae79f2e6632",
      "styleAttributes": {
      },
      "text": "### Deprecated mitigation techniques against XSS\n\nX-XSS-Protection HTTP, implemented by Microsoft ",
      "type": "text",
      "width": 420,
      "x": -1240,
      "y": -955
    },
    {
      "height": 350,
      "id": "f54369e697729d9d",
      "styleAttributes": {
      },
      "text": "### Deprecated web storage\n\n**[Web SQL](https://developer.chrome.com/blog/deprecating-web-sql)**:  allows to store data in a structured manner on the user's computer (internally based on the SQLite database engine).\n- introduced in 2009 and abandoned 2010",
      "type": "text",
      "width": 460,
      "x": -760,
      "y": -955
    },
    {
      "height": 100,
      "id": "a7111022798a0a81",
      "styleAttributes": {
      },
      "text": "## Why did these attempts fail? What can we learn from it?",
      "type": "text",
      "width": 900,
      "x": -1430,
      "y": -525
    },
    {
      "height": 80,
      "id": "c7127fb08f496c3f",
      "styleAttributes": {
      },
      "text": "# Observations on the first +16 papers",
      "type": "text",
      "width": 795,
      "x": -1427,
      "y": -1680
    },
    {
      "height": 80,
      "id": "73b59bc0fcedd02c",
      "styleAttributes": {
      },
      "text": "# About tools or vulnerabilities *Life cycle* (RQ3)\n",
      "type": "text",
      "width": 897,
      "x": -1490,
      "y": -1080
    },
    {
      "height": 320,
      "id": "930155de0aed68e5",
      "styleAttributes": {
      },
      "text": "- Many papers focus on HTTP traffic analysis. The role of the front-end in the communication is often not relevant\n- Tools for code synthesis (WAVES): code can be synthesized for both server and client if the same logic has to be implemented (e.g., double input validation)\n- Web client local storage (IndexedDB) it is not 100% secure, even in private mode\n- \"Private\" web applications (in local networks) often are less secure than public web application ",
      "type": "text",
      "width": 795,
      "x": -1430,
      "y": -1560
    },
    {
      "height": 100,
      "id": "57cd65944a2802bd",
      "styleAttributes": {
      },
      "text": "distinguish browser bugs",
      "type": "text",
      "width": 301,
      "x": -3180,
      "y": 1650
    }
  ]
}