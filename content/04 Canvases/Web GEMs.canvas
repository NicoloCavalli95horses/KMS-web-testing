{
	"nodes":[
		{"id":"31993ad85d9120bf","type":"group","x":320,"y":480,"width":1643,"height":820,"color":"2","label":"Test amplification (blackbox approach)"},
		{"id":"a421e274d2287eed","type":"text","text":"Constraints: \n- Large application\n- Freemium features or [[RBAC (role-based access control)]] implementation\n- Premium or high-privilege features have to be displayed as disabled or hidden, relying on the GUI state","x":241,"y":-200,"width":620,"height":304},
		{"id":"e53e45fea4f402e4","type":"text","text":"### Candidate search","x":-239,"y":-98,"width":381,"height":100},
		{"id":"d9cd58cace40b27a","type":"text","text":"Rely on a database:\n- github databases https://gist.github.com/bejaneps/ba8d8eed85b0c289a05c750b3d825f61\n- https://ahrefs.com/websites\n- https://dataforseo.com/free-seo-stats/top-1000-websites\n","x":1520,"y":33,"width":960,"height":247},
		{"id":"18ac8a629c0abf82","type":"text","text":"Manually list eligible web application:\n- Canva https://www.canva.com/\n- Medium https://medium.com/\n- L'express https://www.lexpress.fr/\n- Le monde https://www.lemonde.fr/","x":1520,"y":-374,"width":840,"height":240},
		{"id":"960d684132d09601","type":"text","text":"Build a web crawler that return addresses of eligible websites","x":1520,"y":-82,"width":840,"height":57},
		{"id":"e89c5e3ca188eff9","type":"text","text":"# GEMs testing on large web scale applications","x":-1120,"y":261,"width":620,"height":220,"color":"5"},
		{"id":"3887d5e55c738576","type":"text","text":"## Identify the GEMs","x":-239,"y":810,"width":381,"height":108},
		{"id":"3de32d91ff03ab38","type":"text","text":"GEMs in https://www.canva.com/:\n- the application is build in React.js\n- production code is minified and obscured but it is browseable with **react dev tools**\n- when you click on a premium content, a paywall pops up\n- some GET requests obtain a preview of the premium content, but the premium state of the clickable element seem not to depend on one of those requests \n- it is possible to identify the exact component that render a premium element\n- it is possible to ==view and edit the current state of the component==\n- by changing the value of a props from `canva_pro` to `none`, a ==premium content becomes free to use==\n- in certain occasion it is even possible to ==download the whole canva that makes uses of the premium content==\n ","x":2520,"y":-621,"width":880,"height":487},
		{"id":"794b191153cae593","type":"text","text":"### Extract structure of the GUI with a [[GUI ripper]]","x":340,"y":532,"width":451,"height":205},
		{"id":"9ba5497dfa31af1c","type":"text","text":"### How to find candidates?","x":952,"y":-82,"width":396,"height":70},
		{"id":"72720dc11c5fa32c","type":"text","text":"Testing process:\n- navigate to the web application\n- identify the candidate widget\n- screenshot the whole page (s1)\n- manipulate the state of the widget (enabling, forcing visibility, forcing z-index position)\n- click or keydown on the widget\n- screenshot the whole page again (s2)\n- if s1 != s2, a potential vulnerability is found ([[differential testing]])","x":905,"y":838,"width":650,"height":435},
		{"id":"f2a240b650757717","type":"text","text":"### Create a E2E test suite","x":340,"y":981,"width":451,"height":148},
		{"id":"ca9ea099459d241a","type":"text","text":"[[dynamic analysis]]:\n- parse each page's DOM/extract components\n- collect references to widgets' state (button, input fields)\n- filter widgets that display a different state depending on the user privilege","x":905,"y":500,"width":650,"height":260},
		{"id":"e1229a408ef8c3a8","type":"text","text":"Tools:\n- Puppeteer\n- Cypress\n- Node.js","x":1600,"y":961,"width":328,"height":190}
	],
	"edges":[
		{"id":"82745a9e942f47cf","fromNode":"e53e45fea4f402e4","fromSide":"right","toNode":"a421e274d2287eed","toSide":"left"},
		{"id":"5e4b97ec2cce503c","fromNode":"794b191153cae593","fromSide":"right","toNode":"ca9ea099459d241a","toSide":"left"},
		{"id":"9f4181e29014b2e1","fromNode":"794b191153cae593","fromSide":"bottom","toNode":"f2a240b650757717","toSide":"top"},
		{"id":"a728680722d2859b","fromNode":"f2a240b650757717","fromSide":"right","toNode":"72720dc11c5fa32c","toSide":"left"},
		{"id":"171aba7605ea7550","fromNode":"72720dc11c5fa32c","fromSide":"right","toNode":"e1229a408ef8c3a8","toSide":"left"},
		{"id":"66109fefdcd10314","fromNode":"a421e274d2287eed","fromSide":"right","toNode":"9ba5497dfa31af1c","toSide":"left"},
		{"id":"6b67301302218d60","fromNode":"9ba5497dfa31af1c","fromSide":"right","toNode":"18ac8a629c0abf82","toSide":"left"},
		{"id":"f6894b1c8d994b87","fromNode":"9ba5497dfa31af1c","fromSide":"right","toNode":"d9cd58cace40b27a","toSide":"left"},
		{"id":"91174156b64e3f4d","fromNode":"9ba5497dfa31af1c","fromSide":"right","toNode":"960d684132d09601","toSide":"left"},
		{"id":"708e1e8b7224acfb","fromNode":"18ac8a629c0abf82","fromSide":"right","toNode":"3de32d91ff03ab38","toSide":"left"},
		{"id":"39a112817e9f1f95","fromNode":"e89c5e3ca188eff9","fromSide":"right","toNode":"e53e45fea4f402e4","toSide":"left"},
		{"id":"0e4bda807de219bc","fromNode":"3887d5e55c738576","fromSide":"right","toNode":"31993ad85d9120bf","toSide":"left"},
		{"id":"9f9cf87632332c99","fromNode":"e89c5e3ca188eff9","fromSide":"right","toNode":"3887d5e55c738576","toSide":"left"}
	]
}