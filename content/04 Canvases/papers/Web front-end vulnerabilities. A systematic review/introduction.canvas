{
	"nodes":[
		{"id":"e739066a889cc44a","type":"text","text":"#### Context\n- With Web 2.0, more and more functionalities and business logic were pushed to the client-side, because client technologies allowed to lighten the server load and to improve the user experience at the same time\n- JavaScript, a scripting language born to enrich web pages has become one of the most popular programming language, with hundreds of framework built by a huge community\n- as the importance of client-side logic increases, the variety of weaknesses and attack opportunities also increases, because\n\t- (i) web applications are becoming increasingly difficult to test\n\t- (ii) new weaknesses have emerged precisely because of the increased complexity (e.g., dependency or framework related issues)\n\t-  (iii) more advanced attacks have been noticed","x":-40,"y":-822,"width":1560,"height":742},
		{"id":"844ae91e55f7c8a9","type":"text","text":"#### Rationale of the study\n- even if a number of taxonomies of vulnerabilities has been proposed in web security, there is a lack of focus in the client-side\n- client-side vulnerabilities deserve attention, because severe damages could be done to both businesses and end-users\n- this comprehensive review suggests a frame to unify and better understanding the research efforts that have been down in this field\n- a good classification can help identifying problems faster, and educating software developers and security specialists to design better software\n","x":-40,"y":-40,"width":1560,"height":742},
		{"id":"53f28683be872b57","type":"text","text":"#### Contributions and paper structure\n","x":-40,"y":760,"width":1560,"height":742},
		{"id":"e2c5ade81191ced7","type":"text","text":"# Introduction","x":-40,"y":-1040,"width":1560,"height":101},
		{"id":"ca19fbfed4575e31","x":740,"y":231,"width":400,"height":191,"type":"file","file":"Pasted image 20250227135700.png"}
	],
	"edges":[]
}